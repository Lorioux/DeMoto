# # This is a basic workflow to build an image and store into docker hub repo.

# # Set the worklflow name as:
# name: CI to Docker Hub

# # This action will be run on main branch push//pull-request - controls when the action will run. 
# on:
#   # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

#   # Allows us to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - name: Check Out Repo
#         uses: actions/checkout@v2

#       # Login into Docker Hud to access Docker Hub Repo
#       - name: Access Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PA_TOKEN }}
      
      
#       # Setup docker buildx
#       - name: Docker Buildx
#         id: buildx
#         uses: docker/setup-buildx-action@v1
      
#       # Lets build and push the image into Docker Hub 
#       - name: Build and Push
#         id: docker_build
#         uses: docker/build-push-action@v2
#         with:
#           context: ./
#           file: ./.devcontainer/Dockerfile
#           push: true
#           tags: ${{secrets.DOCKER_USERNAME}}/demoto-github-image:v1.0
#           #run: docker buildx -t "${secrets.DOCKER_USERNAME}/demoto-github-image":v1.0 .
#           cache-from: type=local,src=/tmp/.buildx-cache
#           cache-to: type=local,dest=/tmp/.buildx-cache  
#       - name: Image digest
#         run: echo ${{ steps.docker_build.outputs.digest }}

# # OPTIMIZATION TASKS      
#       # Build cache to optimize build time
#       - name: Cache Docker layers
#         uses: actions/cache@v2
#         with:
#           path: /tmp/.buildx-cache
#           key: ${{ runner.os }}-buildx-${{ github.sha }}
#           restore-keys: |
#             ${{ runner.os }}-buildx-
  
            
      
